dist: xenial
language: ruby
sudo: required
services:
  - redis-server
  - postgres
addons:
  ssh_known_hosts: rundfunk-mitbestimmen.de
  chrome: stable

before_install:
  - . $HOME/.nvm/nvm.sh
  - nvm install stable
  - nvm use stable

  - cd frontend
  - npm install -g yarn
  - npm install -g ember-cli
  - ember --version
  - npm --version
  - yarn --version
  - node --version
  - cd ..

install:
  - bundle && gem install foreman
  - cd backend && bundle
  - cd ../frontend && yarn install --pure-lockfile
  - cd ..
  - bundle exec rake webdrivers:chromedriver:update


before_script:
  - psql -c 'create database travis_ci_test;' -U postgres
  - cd backend
  - cp config/database.travis.yml config/database.yml
  - bundle exec rake db:schema:load
  - cd ..
  - foreman start -f ProcfileTesting &
    # if we really want to wait, this would be it
    # - foreman start -f ProcfileTesting > foreman.out &
    # - until grep -E 'Listening on' foreman.out && grep -E 'Build successful' foreman.out; do sleep 1; done

script:
  - cd $TRAVIS_BUILD_DIR/frontend
  - BROCCOLI_PERSISTENT_FILTER_CACHE_ROOT=./cache ember test --reporter dot
  - cd $TRAVIS_BUILD_DIR/backend
  - bundle exec rake build:rubocop
  - bundle exec rake build:brakeman
  - bundle exec rake build:rspec
  - cd $TRAVIS_BUILD_DIR
  - bundle exec rake rubocop
  - bundle exec rake features
  - cd $TRAVIS_BUILD_DIR/backend
  - bundle exec rake db:seed
  - cd $TRAVIS_BUILD_DIR

before_deploy:
  - openssl aes-256-cbc -K $encrypted_917becfd336d_key -iv $encrypted_917becfd336d_iv -in deploy_rsa.enc -out /tmp/deploy_rsa -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/deploy_rsa
  - ssh-add /tmp/deploy_rsa
  - rvm $TRAVIS_RUBY_VERSION do gem install bundler capistrano capistrano-rails capistrano-db-tasks

deploy:
  - provider: script
    skip_cleanup: true
    script: cd backend && rvm $TRAVIS_RUBY_VERSION do cap production deploy && cd ../frontend && ember deploy production
    on:
      branch: master

notifications:
  slack:
    secure: M0Ku5Hv2S4C/sAoZKHzsh5IEDFqRvXsuVD+2vNdmMRQNAX2iSxjK2IrQN906+1fWf9ZO1ezPFR1vpnkqLDrp/eZowGP9O6/LkCTVljyFycwfS7KNb4Zz5XRMUedGcTr8jorR45ecTa/gY3xlpy3V+bWoqT5BzRsvfIjGFEYksQOUpCPweJvovx3ZMpouNzHP11D/N7Zw830az3Vf2et9MqN2CXW38z9nWV26v2iNvr/YqBClzQ1o1aKBNDjaKvW2NATGLaN1IBDsTYjgFgCyjHMRmeTvE0rOU5Em7P8ZKkKXazlHmuFsmb+mGwLdxkmwBgT14R1fel39lZNuKUBFQvZM1OIfkZCouxx8cSnAx3YOdSszbwYCuUAXC1E/KnYPtmuIHXpF6b8E8MqyA6R4971MKXfgr7T/js9ET7uT9NmN0DDpr1MvYs4nf8rkZI9nkLKiBRN7mxX9RYbmy8w/rXSWbVAofvaNAprV3YafyLGRUEFiTMkZn0VZevxCRTIHk4h09Ofn9YbqPcJ3zyMXhFy0HNfTf/fRBRzKN1CFqFWw5KZhvBA4Vzutpw9yzlAvVBG7U2KSxMAatMbwYXNeAhOKt9+t5GAtk4UPKE9GIISUaFkBTQqa69nd62iHhKiygv7se3TfNHI6Eq50hC5f058dihcCp1i1Y8RSS04JZnM=
